substitutions:
  _REGION: us-central1
  _PROJECT_ID: atelier-elio
  _REPO: shopify-orders-sheet
  _APP_NAME: shopify-orders-sheet
  _DOCKERFILE_PATH: ./Dockerfile
  _CONTEXT: ./

steps:
  # Step 0: Create Artifact Registry repository if it doesn't exist
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        if ! gcloud artifacts repositories describe "${_REPO}" \
          --location="${_REGION}" --project="${_PROJECT_ID}" >/dev/null 2>&1; then
          echo "Creating Artifact Registry repository '${_REPO}' in '${_REGION}'..."
          gcloud artifacts repositories create "${_REPO}" \
            --repository-format=docker \
            --location="${_REGION}" \
            --description="Docker repository for ${_APP_NAME}"
        else
          echo "Artifact Registry repository '${_REPO}' already exists."
        fi

  # Step 1: Print commit SHA
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "COMMIT SHA: latest"

  # Step 2: Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_APP_NAME}:latest"
      - "-f"
      - "${_DOCKERFILE_PATH}"
      - "${_CONTEXT}"

  # Step 3: Push the container image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_APP_NAME}:latest"

  # Step 4: Deploy container to Cloud Run with health check
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "${_APP_NAME}"
      - "--image"
      - "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_APP_NAME}:latest"
      - "--region"
      - "${_REGION}"
      - "--allow-unauthenticated"
      - "--min-instances=1"
      - "--timeout=3600s"
      - "--cpu=1"
      - "--memory=1024Mi"
      - "--port=8080"
      - "--max-instances=10"

options:
  logging: CLOUD_LOGGING_ONLY
